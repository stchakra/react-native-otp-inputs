{"version":3,"sources":["index.tsx"],"names":["ACTION_TYPES","setHandleChange","setOtpTextForIndex","setOtpCode","clearOtp","setHasKeySupport","reducer","state","type","payload","otpCode","index","text","handleChange","Object","values","join","numberOfInputs","code","hasKeySupport","styles","StyleSheet","create","container","flex","flexDirection","alignItems","justifyContent","OtpInputs","ref","autoCapitalize","clearTextOnFocus","defaultValue","focusStyles","console","log","inputContainerStyles","inputStyles","isRTL","keyboardType","placeholder","secureTextEntry","selectTextOnFocus","style","testIDPrefix","restProps","Platform","OS","dispatch","previousCopiedText","inputs","reset","current","forEach","input","clear","Clipboard","setString","focus","firstInput","handleTextChange","length","handleInputTextChange","handleClearInput","Keyboard","dismiss","fillInputs","focusInput","handleKeyPress","key","nativeEvent","isNaN","parseInt","inputIndex","listenOnCopiedText","getString","copiedText","otpCodeValue","interval","setInterval","clearInterval","renderInputs","iterationArray","Array","fill","map","_","inputValue","React","createRef","keyPressEvent","select","android","ios"],"mappings":"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","sourcesContent":["import React, {\n  RefObject,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useReducer,\n  useRef,\n} from 'react';\nimport {\n  Clipboard,\n  Keyboard,\n  NativeSyntheticEvent,\n  Platform,\n  StyleSheet,\n  TextInput,\n  TextInputKeyPressEventData,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport OtpInput from './OtpInput';\nimport { ActionTypes, OtpInputsRef, ReducerState, Actions } from './types';\nimport { fillOtpCode } from './helpers';\n\ntype Props = TextInputProps & {\n  keyboardType?:\n    | 'default'\n    | 'email-address'\n    | 'phone-pad'\n    | 'visible-password'\n    | 'ascii-capable'\n    | 'numbers-and-punctuation'\n    | 'url'\n    | 'name-phone-pad'\n    | 'twitter'\n    | 'web-search'\n    | undefined;\n  style?: ViewStyle;\n  focusStyles?: ViewStyle;\n  defaultValue?: string;\n  handleChange: (otpCode: string) => void;\n  inputContainerStyles?: ViewStyle;\n  inputStyles?: TextStyle;\n  isRTL?: boolean;\n  numberOfInputs: number;\n  testIDPrefix?: string;\n};\n\nconst ACTION_TYPES: ActionTypes = {\n  setHandleChange: 'setHandleChange',\n  setOtpTextForIndex: 'setOtpTextForIndex',\n  setOtpCode: 'setOtpCode',\n  clearOtp: 'clearOtp',\n  setHasKeySupport: 'setHasKeySupport',\n};\n\nconst reducer = (state: ReducerState, { type, payload }: Actions) => {\n  switch (type) {\n    case ACTION_TYPES.setOtpTextForIndex: {\n      const otpCode = {\n        ...state.otpCode,\n        [`${payload.index}`]: payload.text,\n      };\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return {\n        ...state,\n        otpCode,\n      };\n    }\n\n    case ACTION_TYPES.setOtpCode: {\n      const otpCode = fillOtpCode(payload.numberOfInputs, payload.code);\n\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return {\n        ...state,\n        otpCode,\n      };\n    }\n\n    case ACTION_TYPES.clearOtp: {\n      const otpCode = fillOtpCode(payload);\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return { ...state, otpCode };\n    }\n\n    case ACTION_TYPES.setHandleChange: {\n      return { ...state, handleChange: payload };\n    }\n\n    case ACTION_TYPES.setHasKeySupport: {\n      return { ...state, hasKeySupport: payload };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n});\n\nconst OtpInputs = forwardRef<OtpInputsRef, Props>(\n  (\n    {\n      autoCapitalize = 'none',\n      clearTextOnFocus = false,\n      defaultValue,\n      focusStyles,\n      handleChange = console.log,\n      inputContainerStyles,\n      inputStyles,\n      isRTL = false,\n      keyboardType = 'phone-pad',\n      numberOfInputs = 4,\n      placeholder = '',\n      secureTextEntry = false,\n      selectTextOnFocus = true,\n      style,\n      testIDPrefix = 'otpInput',\n      ...restProps\n    },\n    ref,\n  ) => {\n    const [{ otpCode, hasKeySupport }, dispatch] = useReducer(\n      reducer,\n      {},\n      () => ({\n        otpCode: fillOtpCode(numberOfInputs, defaultValue),\n        handleChange,\n        hasKeySupport: Platform.OS === 'ios',\n      }),\n    );\n    const previousCopiedText: { current: string } = useRef('');\n    const inputs: { current: Array<RefObject<TextInput>> } = useRef([]);\n\n    useEffect(() => {\n      dispatch({ type: ACTION_TYPES.setHandleChange, payload: handleChange });\n    }, [handleChange]);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        reset: (): void => {\n          dispatch({ type: ACTION_TYPES.clearOtp, payload: numberOfInputs });\n          inputs.current.forEach(input => input?.current?.clear());\n          previousCopiedText.current = '';\n          Clipboard.setString('');\n        },\n        focus: (): void => {\n          const firstInput = inputs.current[0];\n          firstInput?.current?.focus();\n        },\n      }),\n      [numberOfInputs],\n    );\n\n    const handleTextChange = (text: string, index: number) => {\n      if (\n        (Platform.OS === 'android' && !hasKeySupport) ||\n        // Pasted from input accessory\n        (Platform.OS === 'ios' && text.length > 1)\n      ) {\n        handleInputTextChange(text, index);\n      }\n    };\n\n    const handleInputTextChange = (text: string, index: number): void => {\n      if (!text.length) {\n        handleClearInput(index);\n      }\n\n      if (text.length > 1) {\n        handleClearInput(index);\n        Keyboard.dismiss();\n        return fillInputs(text);\n      }\n\n      if (text) {\n        dispatch({\n          type: ACTION_TYPES.setOtpTextForIndex,\n          payload: {\n            text,\n            index,\n          },\n        });\n        focusInput(index + 1);\n      }\n\n      if (index === numberOfInputs - 1 && text) {\n        Keyboard.dismiss();\n      }\n    };\n\n    const handleKeyPress = (\n      {\n        nativeEvent: { key },\n      }: NativeSyntheticEvent<TextInputKeyPressEventData>,\n      index: number,\n    ) => {\n      handleInputTextChange(key === 'Backspace' ? '' : key, index);\n\n      if (Platform.OS === 'android' && !hasKeySupport && !isNaN(parseInt(key)))\n        dispatch({ type: ACTION_TYPES.setHasKeySupport, payload: true });\n    };\n\n    const focusInput = useCallback(\n      (index: number): void => {\n        if (index >= 0 && index < numberOfInputs) {\n          const input = inputs.current[index];\n          input?.current?.focus();\n        }\n      },\n      [numberOfInputs],\n    );\n\n    const handleClearInput = useCallback(\n      (inputIndex: number) => {\n        const input = inputs.current[inputIndex];\n        input?.current?.clear();\n        dispatch({\n          type: ACTION_TYPES.setOtpTextForIndex,\n          payload: {\n            index: inputIndex,\n            text: '',\n          },\n        });\n        focusInput(inputIndex - 1);\n      },\n      [focusInput],\n    );\n\n    const fillInputs = useCallback(\n      (code: string) => {\n        dispatch({\n          type: ACTION_TYPES.setOtpCode,\n          payload: { numberOfInputs, code },\n        });\n      },\n      [numberOfInputs],\n    );\n\n    const listenOnCopiedText = useCallback(async (): Promise<void> => {\n      const copiedText = await Clipboard.getString();\n      const otpCodeValue = Object.values(otpCode).join('');\n\n      if (\n        copiedText &&\n        copiedText.length === numberOfInputs &&\n        copiedText !== otpCodeValue &&\n        copiedText !== previousCopiedText.current\n      ) {\n        previousCopiedText.current = copiedText;\n        fillInputs(copiedText);\n      }\n    }, [fillInputs, numberOfInputs, otpCode]);\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        listenOnCopiedText();\n      }, 500);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }, [listenOnCopiedText, numberOfInputs]);\n\n    const renderInputs = (): Array<JSX.Element> => {\n      const iterationArray = Array<number>(numberOfInputs).fill(0);\n\n      return iterationArray.map((_, index) => {\n        let inputIndex = index;\n        if (isRTL) {\n          inputIndex = numberOfInputs - 1 - index;\n        }\n        const inputValue = otpCode[`${inputIndex}`];\n\n        if (!inputs.current[inputIndex]) {\n          inputs.current[inputIndex] = React.createRef<TextInput>();\n        }\n\n        return (\n          <OtpInput\n            autoCapitalize={autoCapitalize}\n            clearTextOnFocus={clearTextOnFocus}\n            firstInput={index === 0}\n            focusStyles={focusStyles}\n            handleKeyPress={(\n              keyPressEvent: NativeSyntheticEvent<TextInputKeyPressEventData>,\n            ) => handleKeyPress(keyPressEvent, inputIndex)}\n            handleTextChange={(text: string) =>\n              handleTextChange(text, inputIndex)\n            }\n            inputContainerStyles={inputContainerStyles}\n            inputStyles={inputStyles}\n            inputValue={inputValue}\n            key={inputIndex}\n            keyboardType={keyboardType}\n            maxLength={Platform.select({\n              android: 1,\n              ios: index === 0 ? numberOfInputs : 1,\n            })}\n            numberOfInputs={numberOfInputs}\n            placeholder={placeholder}\n            // @ts-ignore\n            ref={inputs.current[inputIndex]}\n            secureTextEntry={secureTextEntry}\n            selectTextOnFocus={selectTextOnFocus}\n            testID={`${testIDPrefix}-${inputIndex}`}\n            {...restProps}\n          />\n        );\n      });\n    };\n\n    return <View style={style || styles.container}>{renderInputs()}</View>;\n  },\n);\n\nexport { OtpInputsRef };\nexport default OtpInputs;\n"]}